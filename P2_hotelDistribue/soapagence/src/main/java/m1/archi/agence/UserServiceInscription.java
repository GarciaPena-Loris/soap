
package m1.archi.agence;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "UserServiceInscription", targetNamespace = "http://service.archi.m1/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface UserServiceInscription {


    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     * @throws UserAlreadyExistsException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "inscription", targetNamespace = "http://service.archi.m1/", className = "m1.archi.agence.Inscription")
    @ResponseWrapper(localName = "inscriptionResponse", targetNamespace = "http://service.archi.m1/", className = "m1.archi.agence.InscriptionResponse")
    @Action(input = "http://service.archi.m1/UserServiceInscription/inscriptionRequest", output = "http://service.archi.m1/UserServiceInscription/inscriptionResponse", fault = {
        @FaultAction(className = UserAlreadyExistsException_Exception.class, value = "http://service.archi.m1/UserServiceInscription/inscription/Fault/UserAlreadyExistsException")
    })
    public boolean inscription(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1)
        throws UserAlreadyExistsException_Exception
    ;

}
