
package m1.archi.agence;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "AgenceServiceReservation", targetNamespace = "http://service.archi.m1/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface AgenceServiceReservation {


    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg5
     * @param arg4
     * @param arg1
     * @param arg0
     * @param arg10
     * @param arg11
     * @param arg7
     * @param arg6
     * @param arg9
     * @param arg8
     * @return
     *     returns m1.archi.agence.Reservation
     * @throws DateNonValideException_Exception
     * @throws ReservationProblemeException_Exception
     * @throws UserNotFoundException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "reserverChambresHotel", targetNamespace = "http://service.archi.m1/", className = "m1.archi.agence.ReserverChambresHotel")
    @ResponseWrapper(localName = "reserverChambresHotelResponse", targetNamespace = "http://service.archi.m1/", className = "m1.archi.agence.ReserverChambresHotelResponse")
    @Action(input = "http://service.archi.m1/AgenceServiceReservation/reserverChambresHotelRequest", output = "http://service.archi.m1/AgenceServiceReservation/reserverChambresHotelResponse", fault = {
        @FaultAction(className = DateNonValideException_Exception.class, value = "http://service.archi.m1/AgenceServiceReservation/reserverChambresHotel/Fault/DateNonValideException"),
        @FaultAction(className = UserNotFoundException_Exception.class, value = "http://service.archi.m1/AgenceServiceReservation/reserverChambresHotel/Fault/UserNotFoundException"),
        @FaultAction(className = ReservationProblemeException_Exception.class, value = "http://service.archi.m1/AgenceServiceReservation/reserverChambresHotel/Fault/ReservationProblemeException")
    })
    public Reservation reserverChambresHotel(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        Offre arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        boolean arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        String arg4,
        @WebParam(name = "arg5", targetNamespace = "")
        String arg5,
        @WebParam(name = "arg6", targetNamespace = "")
        String arg6,
        @WebParam(name = "arg7", targetNamespace = "")
        String arg7,
        @WebParam(name = "arg8", targetNamespace = "")
        String arg8,
        @WebParam(name = "arg9", targetNamespace = "")
        String arg9,
        @WebParam(name = "arg10", targetNamespace = "")
        String arg10,
        @WebParam(name = "arg11", targetNamespace = "")
        String arg11)
        throws DateNonValideException_Exception, ReservationProblemeException_Exception, UserNotFoundException_Exception
    ;

}
